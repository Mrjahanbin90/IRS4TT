@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>IRS Notifications</title>
    <style>
        .notification {
            text-decoration: none;
        }

        .email {
            text-decoration: none;
        }

        .logo a {
            color: white;
            text-decoration: none;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f4f7fa;
            color: #333;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        .navbar {
            background-color: #1a2a44;
            padding: 1rem 2rem;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            display: flex;
        }

            .navbar .logo {
                color: #fff;
                font-size: 1.5rem;
                font-weight: bold;
            }

            .navbar .nav-links {
                display: flex;
                gap: 2rem;
            }

                .navbar .nav-links a {
                    color: #fff;
                    text-decoration: none;
                    font-size: 1rem;
                    transition: color 0.3s;
                }

                    .navbar .nav-links a:hover {
                        color: #00aaff;
                    }

        .nav-icons {
            display: flex;
            gap: 1.5rem;
            align-items: center;
        }

            .nav-icons .icon {
                position: relative;
                color: #fff;
                font-size: 1.2rem;
                cursor: pointer;
            }

            .nav-icons .badge {
                position: absolute;
                top: -8px;
                right: -8px;
                background-color: #ff4d4f;
                color: #fff;
                border-radius: 50%;
                padding: 2px 6px;
                font-size: 0.75rem;
                font-weight: bold;
            }

            .nav-icons .tooltip {
                visibility: hidden;
                background-color: #333;
                color: #fff;
                text-align: center;
                border-radius: 4px;
                padding: 5px 10px;
                position: absolute;
                z-index: 1;
                top: 30px;
                right: -20px;
                font-size: 0.8rem;
                white-space: nowrap;
                opacity: 0;
                transition: opacity 0.3s;
            }

            .nav-icons .icon:hover .tooltip {
                visibility: visible;
                opacity: 1;
            }

        .main-content {
            flex: 1;
            padding: 2rem;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .notification-count {
            font-size: 1.2rem;
            color: #1a2a44;
            margin-bottom: 1rem;
        }

        .notification-list {
            width: 100%;
            max-width: 800px;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

        .notification-item {
            padding: 1rem;
            border-bottom: 1px solid #ddd;
            cursor: pointer;
            transition: background-color 0.3s;
        }

            .notification-item:hover {
                background-color: #f9f9f9;
            }

            .notification-item:last-child {
                border-bottom: none;
            }

            .notification-item .title {
                font-weight: bold;
                color: #1a2a44;
            }

            .notification-item .details {
                color: #666;
                font-size: 0.9rem;
            }

        footer {
            background-color: #f4f7fa;
            padding: 1rem;
            width: 100%;
        }

        .chatbox {
            background-color: #fff;
            width: 100%;
            border-radius: 10px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
            flex-direction: column;
            overflow: hidden;
            max-width: 800px;
            margin: 0 auto;
        }

        .chatbox-body {
            padding: 1rem;
            flex: 1;
            overflow-y: auto;
            background-color: #f9f9f9;
            max-height: 300px;
        }

            .chatbox-body p {
                margin-bottom: 1rem;
                font-size: 0.9rem;
                color: #333;
            }

            .chatbox-body .message {
                background-color: #e0f7fa;
                padding: 0.5rem;
                border-radius: 5px;
                margin-bottom: 0.5rem;
            }

            .chatbox-body .error {
                background-color: #ffe6e6;
                color: #d32f2f;
            }

        .chatbox-footer {
            padding: 0.75rem;
            background-color: #fff;
            border-top: 1px solid #ddd;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

            .chatbox-footer input[type="text"] {
                flex: 1;
                padding: 0.75rem;
                border: 1px solid #ddd;
                border-radius: 5px;
                font-size: 1rem;
                direction: rtl;
                width: 100%;
            }

            .chatbox-footer .icon-btn {
                background: none;
                border: none;
                font-size: 1.2rem;
                cursor: pointer;
                color: #555;
                transition: color 0.3s;
            }

                .chatbox-footer .icon-btn:hover {
                    color: #00aaff;
                }

                .chatbox-footer .icon-btn.recording {
                    color: #ff4d4f;
                }

            .chatbox-footer .send-btn {
                width: 2rem;
                height: 2rem;
                font-size: 1.2rem;
            }

            .chatbox-footer .progress-spinner {
                width: 1.5rem;
                height: 1.5rem;
                border: 3px solid #ddd;
                border-top: 3px solid #00aaff;
                border-radius: 50%;
                animation: spin 1s linear infinite;
                margin: 0 auto;
            }

        @@keyframes spin {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }

        .chatbox-footer.disabled {
            opacity: 0.5;
            pointer-events: none;
        }

        @@media (max-width: 768px) {
            .navbar {
                flex-direction: column;
                gap: 1rem;
            }

                .navbar .nav-links {
                    flex-direction: column;
                    gap: 1rem;
                }

            .notification-list {
                max-width: 100%;
            }

            .chatbox {
                max-width: 100%;
            }
        }
    </style>
</head>
<body>
    <!-- Navigation Bar -->
    <nav class="navbar">
        <div class="logo">
            <a href="/IRS">Modern IRS</a>
        </div>
        <div class="nav-links">
            <a href="index.html">Home</a>
            <a href="contract.html">Contracts</a>
            <a href="invoice.html">Invoices</a>
            <a href="#">About</a>
            <a href="#">Contact</a>
        </div>
        <div class="nav-icons">
            <a href="notification" class="icon notification">
                🔔 <span class="badge" id="notificationBadge">10</span>
                <span class="tooltip" id="notificationTooltip">You have 10 new tasks</span>
            </a>
            <a href="email" class="icon email">
                ✉️ <span class="badge" id="emailBadge">5</span>
                <span class="tooltip" id="emailTooltip">You have 5 new contracts</span>
            </a>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="main-content">
        <div class="notification-count">تعداد اعلان‌ها: <span id="notificationCount">10</span></div>
        <div class="notification-list" id="notificationList">
            <div class="notification-item" data-index="0">
                <div class="title">اعلان اول - وظیفه جدید</div>
                <div class="details">لطفاً وظیفه جدید را تا فردا تکمیل کنید...</div>
            </div>
            <div class="notification-item" data-index="1">
                <div class="title">اعلان دوم - یادآوری جلسه</div>
                <div class="details">جلسه ساعت 10 صبح برگزار می‌شود...</div>
            </div>
            <div class="notification-item" data-index="2">
                <div class="title">اعلان سوم - گزارش پیشرفت</div>
                <div class="details">لطفاً گزارش پیشرفت را ارسال کنید...</div>
            </div>
            <div class="notification-item" data-index="3">
                <div class="title">اعلان چهارم - به‌روزرسانی سیستم</div>
                <div class="details">سیستم شما به‌روزرسانی شده است...</div>
            </div>
            <div class="notification-item" data-index="4">
                <div class="title">اعلان پنجم - تأیید قرارداد</div>
                <div class="details">قرارداد جدید نیاز به تأیید دارد...</div>
            </div>
            <div class="notification-item" data-index="5">
                <div class="title">اعلان ششم - پرداخت موفق</div>
                <div class="details">پرداخت شما با موفقیت انجام شد...</div>
            </div>
            <div class="notification-item" data-index="6">
                <div class="title">اعلان هفتم - دعوت به تیم</div>
                <div class="details">به تیم جدید دعوت شدید...</div>
            </div>
            <div class="notification-item" data-index="7">
                <div class="title">اعلان هشتم - یادآوری پروژه</div>
                <div class="details">ددلاین پروژه نزدیک است...</div>
            </div>
            <div class="notification-item" data-index="8">
                <div class="title">اعلان نهم - پشتیبانی</div>
                <div class="details">درخواست پشتیبانی شما ثبت شد...</div>
            </div>
            <div class="notification-item" data-index="9">
                <div class="title">اعلان دهم - اطلاع‌رسانی</div>
                <div class="details">اطلاعات جدید درباره سیستم...</div>
            </div>
        </div>
    </main>

    <!-- Footer with Chatbox -->
    <footer>
        <div class="chatbox" id="chatbox">
            <div class="chatbox-body" id="chatboxBody">
                <p class="message">سلام! چطور می‌توانیم به شما کمک کنیم؟</p>
            </div>
            <div class="chatbox-footer">
                <button class="icon-btn" id="micBtn" title="ضبط صدا">🎤</button>
                <button class="icon-btn" id="attachBtn" title="پیوست فایل">📎</button>
                <input type="text" id="textInput" placeholder="پیام خود را بنویسید...">
                <button class="icon-btn send-btn" id="sendBtn" title="ارسال">➤</button>
            </div>
        </div>
    </footer>

    <script>
        let mediaRecorder;
        let recordedChunks = [];
        let isRecording = false;
        let notificationCount = 10;

        function showError(message) {
            const chatboxBody = document.getElementById('chatboxBody');
            const error = document.createElement('p');
            error.className = 'message error';
            error.textContent = message;
            chatboxBody.appendChild(error);
            chatboxBody.scrollTop = chatboxBody.scrollHeight;
        }

        function showMessage(message) {
            const chatboxBody = document.getElementById('chatboxBody');
            const msg = document.createElement('p');
            msg.className = 'message';
            msg.innerHTML = message; // Use innerHTML for links
            chatboxBody.appendChild(msg);
            chatboxBody.scrollTop = chatboxBody.scrollHeight;
        }

        function disableChatbox() {
            const chatboxFooter = document.querySelector('.chatbox-footer');
            chatboxFooter.classList.add('disabled');
        }

        function enableChatbox() {
            const chatboxFooter = document.querySelector('.chatbox-footer');
            chatboxFooter.classList.remove('disabled');
        }

        function showSendProgress() {
            const sendBtn = document.getElementById('sendBtn');
            sendBtn.innerHTML = '<div class="progress-spinner"></div>';
            sendBtn.classList.remove('send-btn');
        }

        function restoreSendButton() {
            const sendBtn = document.getElementById('sendBtn');
            sendBtn.innerHTML = '➤';
            sendBtn.classList.add('send-btn');
        }

        function updateNotificationCount() {
            const notificationCountElement = document.getElementById('notificationCount');
            const notificationBadge = document.getElementById('notificationBadge');
            notificationCountElement.textContent = notificationCount;
            notificationBadge.textContent = notificationCount;
        }

        function removeNotification(index) {
            const notificationList = document.getElementById('notificationList');
            const notificationItems = notificationList.getElementsByClassName('notification-item');
            for (let i = 0; i < notificationItems.length; i++) {
                if (parseInt(notificationItems[i].dataset.index) === index) {
                    notificationItems[i].remove();
                    break;
                }
            }
            notificationCount--;
            updateNotificationCount();
        }

        async function checkMicrophonePermission() {
            if (!window.MediaRecorder) {
                showError('مرورگر شما از ضبط صدا پشتیبانی نمی‌کند. لطفاً از کروم یا فایرفاکس استفاده کنید.');
                return;
            }

            if (!window.location.protocol.includes('https') && window.location.hostname !== 'localhost') {
                showError('برای دسترسی به میکروفن نیاز به HTTPS یا localhost دارید. لطفاً صفحه را در محیط امن باز کنید.');
                return;
            }

            if (navigator.permissions && navigator.permissions.query) {
                try {
                    const permissionStatus = await navigator.permissions.query({ name: 'microphone' });
                    if (permissionStatus.state === 'denied') {
                        showError('دسترسی به میکروفن مسدود شده است. لطفاً در تنظیمات مرورگر (Site Settings > Microphone) آن را فعال کنید.');
                        return;
                    } else if (permissionStatus.state === 'granted') {
                        startRecording();
                    } else {
                        startRecording();
                    }
                } catch (err) {
                    console.error('خطا در بررسی اجازه میکروفن:', err);
                    showError('نمی‌توان وضعیت اجازه میکروفن را بررسی کرد. لطفاً دسترسی را چک کنید.');
                    startRecording();
                }
            } else {
                startRecording();
            }
        }

        async function startRecording() {
            try {
                const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
                mediaRecorder = new MediaRecorder(stream);
                recordedChunks = [];
                isRecording = true;

                const micBtn = document.getElementById('micBtn');
                micBtn.classList.add('recording');

                mediaRecorder.ondataavailable = (e) => {
                    if (e.data.size > 0) {
                        recordedChunks.push(e.data);
                    }
                };

                mediaRecorder.onstop = () => {
                    const blob = new Blob(recordedChunks, { type: 'audio/webm' });
                    const chatboxBody = document.getElementById('chatboxBody');
                    const message = document.createElement('p');
                    message.className = 'message';
                    message.textContent = 'پیام صوتی ارسال شد';
                    chatboxBody.appendChild(message);
                    chatboxBody.scrollTop = chatboxBody.scrollHeight;
                    console.log('پیام صوتی:', blob);
                    isRecording = false;
                    micBtn.classList.remove('recording');
                    stream.getTracks().forEach(track => track.stop());
                };

                mediaRecorder.start();
                showMessage('ضبط صدا شروع شد...');
            } catch (err) {
                console.error('خطای میکروفن:', err.name, err.message);
                let errorMessage = 'نمی‌توان به میکروفن دسترسی پیدا کرد.';
                if (err.name === 'NotAllowedError') {
                    errorMessage = 'دسترسی به میکروفن رد شده است. لطفاً در پنجره بازشو یا تنظیمات مرورگر اجازه دهید.';
                } else if (err.name === 'NotFoundError') {
                    errorMessage = 'میکروفن پیدا نشد. لطفاً میکروفن را وصل کنید.';
                } else if (err.name === 'SecurityError') {
                    errorMessage = 'دسترسی به میکروفن نیاز به HTTPS یا localhost دارد.';
                }
                showError(errorMessage);
            }
        }

        // Example command to mark a notification as read or dismiss
        function processMarkNotificationAsRead(index) {
            disableChatbox();
            showSendProgress();
            showMessage(`در حال پردازش اعلان شماره ${index + 1}...`);
            setTimeout(() => {
                showMessage(`اعلان شماره ${index + 1} با موفقیت پردازش شد.`);
                removeNotification(index);
                restoreSendButton();
                enableChatbox();
            }, 5000);
        }

        document.getElementById('micBtn').addEventListener('click', () => {
            if (isRecording) {
                mediaRecorder.stop();
                showMessage('ضبط صدا متوقف شد.');
            } else {
                checkMicrophonePermission();
            }
        });

        document.getElementById('attachBtn').addEventListener('click', () => {
            const input = document.createElement('input');
            input.type = 'file';
            input.onchange = (e) => {
                const file = e.target.files[0];
                const chatboxBody = document.getElementById('chatboxBody');
                const message = document.createElement('p');
                message.className = 'message';
                message.textContent = `فایل پیوست شد: ${file ? file.name : 'هیچ'}`;
                chatboxBody.appendChild(message);
                chatboxBody.scrollTop = chatboxBody.scrollHeight;
                console.log('فایل پیوست:', file);
            };
            input.click();
        });

        document.getElementById('sendBtn').addEventListener('click', () => {
            const textInput = document.getElementById('textInput');
            const messageText = textInput.value.trim();
            if (messageText && !document.querySelector('.chatbox-footer').classList.contains('disabled')) {
                const chatboxBody = document.getElementById('chatboxBody');
                const message = document.createElement('p');
                message.className = 'message';
                message.textContent = messageText;
                chatboxBody.appendChild(message);
                chatboxBody.scrollTop = chatboxBody.scrollHeight;
                console.log('پیام متنی:', messageText);
                // Example command to process a notification (e.g., mark as read)
                const match = messageText.match(/اعلان شماره (\d+) را پردازش کن/);
                if (match) {
                    const index = parseInt(match[1]) - 1;
                    if (index >= 0 && index < notificationCount) {
                        processMarkNotificationAsRead(index);
                    } else {
                        showMessage('شماره اعلان نامعتبر است.');
                    }
                } else {
                    console.log('پیام واردشده مطابقت ندارد:', messageText);
                }
                textInput.value = '';
            }
        });

        document.getElementById('textInput').addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                document.getElementById('sendBtn').click();
            }
        });
    </script>
</body>
</html>